"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages_components_map_js",{

/***/ "./pages/components/map.js":
/*!*********************************!*\
  !*** ./pages/components/map.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Navbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Navbar */ \"./pages/components/Navbar.js\");\n/* harmony import */ var _alart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./alart */ \"./pages/components/alart.js\");\n/* harmony import */ var _ImageSlider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ImageSlider */ \"./pages/components/ImageSlider.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\nconst Popup = (param)=>{\n    let { name, onSetDestination, storeData, error } = param;\n    const baseUrl = \"http://ec2-3-37-50-217.ap-northeast-2.compute.amazonaws.com:9090\";\n    const imagesWithNames = (storeData === null || storeData === void 0 ? void 0 : storeData.data.shop_list.flatMap((shop)=>shop.product.map((product)=>({\n                url: \"\".concat(baseUrl).concat(product.product_image_url),\n                name: product.product_name\n            })))) || [];\n    const getTotalViewCount = (products)=>{\n        return products.reduce((sum, product)=>sum + product.product_view_count, 0);\n    };\n    const handleSetDestination = async ()=>{\n        try {\n            const response = await fetch(\"/api/map/set/destination/\".concat(encodeURIComponent(name)), {\n                method: \"GET\"\n            });\n            const data = await response.json();\n            console.log(\"API 응답 status_code:\", data.status_code);\n            if (data.status_code === 200) {\n                onSetDestination(data.data.latitude, data.data.longitude);\n                console.log(\"destincatino setting 설정:\", data.data.latitude, data.data.longitude);\n            } else {\n                throw new Error(\"목적지 설정 실패: \".concat(data.message));\n            }\n        } catch (error) {\n            console.error(\"목적지 설정 오류:\", error);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jsx-4ab4686b04ba3b05\" + \" \" + \"pop-up-container\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jsx-4ab4686b04ba3b05\" + \" \" + \"slider-container\",\n                children: storeData ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ImageSlider__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                    images: imagesWithNames\n                }, void 0, false, {\n                    fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                    lineNumber: 45,\n                    columnNumber: 22\n                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"jsx-4ab4686b04ba3b05\",\n                    children: \"이미지 로딩 중...\"\n                }, void 0, false, {\n                    fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                    lineNumber: 45,\n                    columnNumber: 65\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"jsx-4ab4686b04ba3b05\" + \" \" + \"title\",\n                children: name\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 47,\n                columnNumber: 7\n            }, undefined),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"jsx-4ab4686b04ba3b05\" + \" \" + \"error\",\n                children: error\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 49,\n                columnNumber: 17\n            }, undefined),\n            storeData ? storeData.data.shop_list.map((shop, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"jsx-4ab4686b04ba3b05\" + \" \" + \"store-container\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"jsx-4ab4686b04ba3b05\" + \" \" + \"store-title\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"jsx-4ab4686b04ba3b05\" + \" \" + \"shop-name\",\n                                    children: shop.shop_name\n                                }, void 0, false, {\n                                    fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                                    lineNumber: 55,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"jsx-4ab4686b04ba3b05\" + \" \" + \"view-count\",\n                                    children: \"\".concat(getTotalViewCount(shop.product))\n                                }, void 0, false, {\n                                    fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                                    lineNumber: 56,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                            lineNumber: 54,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"jsx-4ab4686b04ba3b05\" + \" \" + \"store-info\",\n                            children: \"\".concat(shop.shop_address_details, \" \").concat(shop.shop_contact)\n                        }, void 0, false, {\n                            fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                            lineNumber: 58,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, index, true, {\n                    fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                    lineNumber: 53,\n                    columnNumber: 11\n                }, undefined)) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"jsx-4ab4686b04ba3b05\",\n                children: \"상점 정보 로딩 중...\"\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 62,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: handleSetDestination,\n                className: \"jsx-4ab4686b04ba3b05\" + \" \" + \"enpoint-btn\",\n                children: \"목적지 설정\"\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 65,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"4ab4686b04ba3b05\",\n                children: \".pop-up-container.jsx-4ab4686b04ba3b05{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:253px;height:400px;padding-top:20px;background:rgba(34,34,34,.99);-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;overflow-y:auto;-webkit-border-radius:10px;-moz-border-radius:10px;border-radius:10px}.slider-container.jsx-4ab4686b04ba3b05{width:205px;height:200px;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:10px;-webkit-border-radius:10px;-moz-border-radius:10px;border-radius:10px}.title.jsx-4ab4686b04ba3b05{width:200px;color:#FFF;font-family:Roboto;font-size:16px;font-weight:500;letter-spacing:1px;margin-top:20px;margin-bottom:20px}.store-container.jsx-4ab4686b04ba3b05{width:207px;-webkit-border-radius:2px;-moz-border-radius:2px;border-radius:2px;background:#4C4C4C;margin-bottom:8px;padding-bottom:8px}.store-title.jsx-4ab4686b04ba3b05{width:207px;padding:4px 0;background:#304FFE;color:#FFF;font-family:NanumSquare_ac;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.shop-name.jsx-4ab4686b04ba3b05{-webkit-box-flex:1;-webkit-flex-grow:1;-moz-box-flex:1;-ms-flex-positive:1;flex-grow:1;text-align:left;padding-left:10px}.view-count.jsx-4ab4686b04ba3b05{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;padding-right:10px}.store-info.jsx-4ab4686b04ba3b05,.product-info.jsx-4ab4686b04ba3b05{color:#FFF;font-family:NanumSquare_ac;font-size:12px;text-align:center;margin:4px 0}.enpoint-btn.jsx-4ab4686b04ba3b05{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;padding:10px;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;background:#304FFE;color:#FFF;border:none;cursor:pointer;margin-bottom:20px}.error.jsx-4ab4686b04ba3b05{color:red;font-size:12px}\"\n            }, void 0, false, void 0, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n        lineNumber: 43,\n        columnNumber: 5\n    }, undefined);\n};\n_c = Popup;\nfunction debounce(func, wait) {\n    let timeout;\n    return function executedFunction() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        const later = ()=>{\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\nconst SearchBar = (param)=>{\n    let { onSearch } = param;\n    _s();\n    const [query, setQuery] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [suggestions, setSuggestions] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const [showSuggestions, setShowSuggestions] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        onSearch(query);\n        setShowSuggestions(false);\n    };\n    const handleInputChange = (e)=>{\n        const value = e.target.value;\n        setQuery(value);\n        if (value.length > 1) {\n            fetchSuggestions(value);\n        } else {\n            setSuggestions([]);\n        }\n    };\n    const fetchSuggestions = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(debounce((value)=>{\n        if (window.kakao && window.kakao.maps && window.kakao.maps.services) {\n            const places = new window.kakao.maps.services.Places();\n            places.keywordSearch(value, (result, status)=>{\n                if (status === window.kakao.maps.services.Status.OK) {\n                    const uniqueSuggestions = [\n                        ...new Set(result.map((item)=>item.place_name))\n                    ];\n                    setSuggestions(uniqueSuggestions.slice(0, 5));\n                    setShowSuggestions(true);\n                }\n            });\n        }\n    }, 300), []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: \"absolute\",\n            top: \"3.5rem\",\n            left: \"10px\",\n            right: \"10px\",\n            zIndex: 11\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleSubmit,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                    type: \"text\",\n                    value: query,\n                    onChange: handleInputChange,\n                    placeholder: \"장소를 검색하세요\",\n                    style: {\n                        width: \"100%\",\n                        padding: \"10px\",\n                        borderRadius: \"10px\",\n                        border: \"1px solid #dddd\",\n                        fontSize: \"14px\",\n                        backgroundColor: \"white\",\n                        color: \"#222\"\n                    }\n                }, void 0, false, {\n                    fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                    lineNumber: 215,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 214,\n                columnNumber: 7\n            }, undefined),\n            showSuggestions && suggestions.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                style: {\n                    listStyle: \"none\",\n                    padding: 0,\n                    margin: 0,\n                    backgroundColor: \"white\",\n                    borderRadius: \"0 0 20px 20px\",\n                    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n                    zIndex: 11,\n                    color: \"#000\"\n                },\n                children: suggestions.map((suggestion, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        onClick: ()=>{\n                            setQuery(suggestion);\n                            onSearch(suggestion);\n                            setShowSuggestions(false);\n                        },\n                        style: {\n                            padding: \"10px\",\n                            cursor: \"pointer\",\n                            borderBottom: index < suggestions.length - 1 ? \"1px solid #eee\" : \"none\"\n                        },\n                        children: suggestion\n                    }, index, false, {\n                        fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                        lineNumber: 243,\n                        columnNumber: 13\n                    }, undefined))\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 232,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n        lineNumber: 207,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SearchBar, \"yONDmIuqhSPizYrO3RbXIfz8hqk=\");\n_c1 = SearchBar;\nconst Map = ()=>{\n    _s1();\n    const [map, setMap] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [kakao, setKakao] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [stores, setStores] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    const markersRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)({});\n    const activeInfoWindowRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [userMarker, setUserMarker] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [userCircle, setUserCircle] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [destinationCircle, setDestinationCircle] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [destinationMarker, setDestinationMarker] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [polyline, setPolyline] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [watchId, setWatchId] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [distanceOverlay, setDistanceOverlay] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [isCirclesOverlapping, setIsCirclesOverlapping] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [overlapOverlay, setOverlapOverlay] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const [showIcon, setShowIcon] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [distanceWorker, setDistanceWorker] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n    const R = 30; // distance \n    const r = 5; // 사용자 반지름\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const worker = new Worker(\"distanceWorker.js\");\n        setDistanceWorker(worker);\n        return ()=>worker.terminate();\n    }, []);\n    const calculateDistanceAsync = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((lat1, lon1, lat2, lon2)=>{\n        return new Promise((resolve)=>{\n            distanceWorker.onmessage = (e)=>resolve(e.data);\n            distanceWorker.postMessage({\n                lat1,\n                lon1,\n                lat2,\n                lon2\n            });\n        });\n    }, [\n        distanceWorker\n    ]);\n    const fetchStoreData = async (storeName)=>{\n        try {\n            const response = await fetch(\"/api/store/\".concat(encodeURIComponent(storeName)));\n            if (!response.ok) {\n                throw new Error(\"Network response was not ok\");\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error fetching store data:\", error);\n            throw error;\n        }\n    };\n    const fetchMallStreetData = async ()=>{\n        try {\n            const response = await fetch(\"/api/map/get/mall/street\");\n            if (!response.ok) {\n                throw new Error(\"HTTP error! status: \".concat(response.status));\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Error fetching mall street data:\", error);\n            throw error;\n        }\n    };\n    const removeAllMarkers = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        Object.values(markersRef.current).forEach((param)=>{\n            let { marker } = param;\n            return marker.setMap(null);\n        });\n        markersRef.current = {};\n        if (userMarker) userMarker.setMap(null);\n        if (destinationMarker) destinationMarker.setMap(null);\n    }, [\n        userMarker,\n        destinationMarker\n    ]);\n    const updateCircleColors = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async (userPosition, destPosition)=>{\n        if (!userCircle || !destinationCircle) {\n            console.error(\"User circle or destination circle is not initialized\");\n            return;\n        }\n        const d = await calculateDistanceAsync(userPosition.getLat(), userPosition.getLng(), destPosition.getLat(), destPosition.getLng()) * 1000;\n        const isOverlapping = d <= R + r;\n        const strokeColor = isOverlapping ? \"#FF0000\" : \"#304FFE\";\n        const fillColor = isOverlapping ? \"#FF0000\" : \"#304FFE\";\n        userCircle.setOptions({\n            strokeColor: strokeColor,\n            fillColor: fillColor,\n            strokeOpacity: 0.8,\n            fillOpacity: 0.3\n        });\n        destinationCircle.setOptions({\n            strokeColor: strokeColor,\n            fillColor: fillColor,\n            strokeOpacity: 0.8,\n            fillOpacity: 0.3\n        });\n        setIsCirclesOverlapping(isOverlapping);\n        if (isOverlapping) {\n            // 모든 마커 제거\n            Object.values(markersRef.current).forEach((param)=>{\n                let { marker, infowindow } = param;\n                if (marker) marker.setMap(null);\n                if (infowindow) infowindow.close();\n            });\n            markersRef.current = {};\n            // 사용자 마커와 목적지 마커 제거\n            if (userMarker) userMarker.setMap(null);\n            if (destinationMarker) destinationMarker.setMap(null);\n            if (overlapOverlay) {\n                overlapOverlay.setMap(null);\n            }\n            // 오버레이 컨테이너 생성\n            // const overlayContainer = document.createElement('overlaybox');\n            // overlayContainer.className = 'overlaybox'; // CSS 클래스 추가\n            // // 스타일 설정\n            // Object.assign(overlayContainer.style, {\n            //   position: 'relative',\n            //   width: '360px',\n            //   height: '350px',\n            //   padding: '15px 10px',\n            // });\n            // // 카카오 맵 CustomOverlay 생성\n            // const newOverlay = new kakao.maps.CustomOverlay({\n            //   content: overlayContainer,\n            //   map: map,\n            //   position: userPosition,\n            // });\n            react_dom__WEBPACK_IMPORTED_MODULE_3___default().render(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_alart__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                onClose: ()=>{\n                    newOverlay.setMap(null);\n                    setShowIcon(true);\n                },\n                onMove: ()=>{\n                    console.log(\"Move button clicked\");\n                }\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 399,\n                columnNumber: 7\n            }, undefined));\n            setOverlapOverlay(newOverlay);\n        } else if (overlapOverlay) {\n            overlapOverlay.setMap(null);\n        }\n    }, [\n        map,\n        kakao,\n        userCircle,\n        destinationCircle,\n        R,\n        r,\n        overlapOverlay,\n        userMarker,\n        destinationMarker,\n        calculateDistanceAsync\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (isCirclesOverlapping && overlapOverlay) {\n            overlapOverlay.setMap(map);\n        } else if (overlapOverlay) {\n            overlapOverlay.setMap(null);\n        }\n    }, [\n        isCirclesOverlapping,\n        overlapOverlay,\n        map\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        return ()=>{\n            if (overlapOverlay) {\n                overlapOverlay.setMap(null);\n            }\n        };\n    }, [\n        overlapOverlay\n    ]);\n    const setDestination = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async (destLat, destLng)=>{\n        if (map && kakao) {\n            Object.values(markersRef.current).forEach((param)=>{\n                let { marker } = param;\n                return marker.setMap(null);\n            });\n            markersRef.current = {};\n            [\n                destinationCircle,\n                polyline\n            ].forEach((item)=>item && item.setMap(null));\n            const destPosition = new kakao.maps.LatLng(destLat, destLng);\n            if (destinationMarker) {\n                destinationMarker.setPosition(destPosition);\n            } else {\n                const newDestMarker = new kakao.maps.Marker({\n                    position: destPosition,\n                    map: map\n                });\n                setDestinationMarker(newDestMarker);\n            }\n            const newDestCircle = new kakao.maps.Circle({\n                center: destPosition,\n                radius: R,\n                strokeWeight: 2,\n                strokeColor: \"#304FFE\",\n                strokeOpacity: 0.8,\n                strokeStyle: \"solid\",\n                fillColor: \"#304FFE\",\n                fillOpacity: 0.3,\n                map: map\n            });\n            setDestinationCircle(newDestCircle);\n            const userPosition = userMarker ? userMarker.getPosition() : map.getCenter();\n            const userLat = userPosition.getLat();\n            const userLng = userPosition.getLng();\n            const distance = await calculateDistanceAsync(userLat, userLng, destLat, destLng);\n            if (distanceOverlay) distanceOverlay.setMap(null);\n            const newDistanceOverlay = new kakao.maps.CustomOverlay({\n                position: new kakao.maps.LatLng((userLat + destLat) / 2, (userLng + destLng) / 2),\n                content: '<div style=\"padding:5px;background:rgba(255,255,255,0.7);border-radius:5px;color:black;\">'.concat((distance * 1000).toFixed(0), \"m</div>\"),\n                map: map\n            });\n            setDistanceOverlay(newDistanceOverlay);\n            const newPolyline = new kakao.maps.Polyline({\n                path: [\n                    userPosition,\n                    destPosition\n                ],\n                strokeWeight: 3,\n                strokeColor: \"#686D76\",\n                strokeOpacity: 0.7,\n                strokeStyle: \"solid\"\n            });\n            newPolyline.setMap(map);\n            setPolyline(newPolyline);\n            const bounds = new kakao.maps.LatLngBounds();\n            bounds.extend(userPosition);\n            bounds.extend(destPosition);\n            map.setBounds(bounds);\n            updateCircleColors(userPosition, destPosition);\n            if (watchId) {\n                navigator.geolocation.clearWatch(watchId);\n            }\n            const newWatchId = navigator.geolocation.watchPosition(async (position)=>{\n                const newUserLat = position.coords.latitude;\n                const newUserLng = position.coords.longitude;\n                const newUserPosition = new kakao.maps.LatLng(newUserLat, newUserLng);\n                userMarker.setPosition(newUserPosition);\n                userCircle.setPosition(newUserPosition);\n                updateCircleColors(newUserPosition, destPosition);\n                newPolyline.setPath([\n                    newUserPosition,\n                    destPosition\n                ]);\n                const newDistance = await calculateDistanceAsync(newUserLat, newUserLng, destLat, destLng);\n                newDistanceOverlay.setPosition(new kakao.maps.LatLng((newUserLat + destLat) / 2, (newUserLng + destLng) / 2));\n                newDistanceOverlay.setContent('<div style=\"padding:5px;background:white;border-radius:5px;color: black;\">'.concat((newDistance * 1000).toFixed(0), \"m</div>\"));\n            }, (error)=>{\n                console.error(\"Error watching user location:\", error);\n            }, {\n                enableHighAccuracy: true,\n                maximumAge: 0,\n                timeout: 5000\n            });\n            setWatchId(newWatchId);\n            if (activeInfoWindowRef.current) {\n                activeInfoWindowRef.current.close();\n                activeInfoWindowRef.current = null;\n            }\n            setStores([\n                {\n                    name: \"목적지\",\n                    lat: destLat,\n                    lng: destLng\n                }\n            ]);\n        }\n    }, [\n        map,\n        kakao,\n        userMarker,\n        userCircle,\n        destinationCircle,\n        destinationMarker,\n        polyline,\n        watchId,\n        distanceOverlay,\n        updateCircleColors,\n        R,\n        calculateDistanceAsync\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        return ()=>{\n            if (watchId) {\n                navigator.geolocation.clearWatch(watchId);\n            }\n            if (distanceOverlay) {\n                distanceOverlay.setMap(null);\n            }\n        };\n    }, [\n        watchId,\n        distanceOverlay\n    ]);\n    const addStoreMarker = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((lat, lng, name, id)=>{\n        if (!map || !kakao) {\n            console.error(\"Map or Kakao object is not initialized\");\n            return null;\n        }\n        const position = new kakao.maps.LatLng(lat, lng);\n        const marker = new kakao.maps.Marker({\n            position: position,\n            map: map,\n            zIndex: 1\n        });\n        // 외부 div 스타일 설정\n        const style = document.createElement(\"style\");\n        style.textContent = \"\\n      .custom-infowindow {\\n        border-radius: 10px;\\n        background: rgba(34, 34, 34, 0.99);\\n        padding: 10px;\\n        color: white;\\n      }\\n    \";\n        document.head.appendChild(style);\n        const content = document.createElement(\"div\");\n        content.className = \"custom-infowindow\";\n        const infowindow = new kakao.maps.InfoWindow({\n            content: content,\n            zIndex: 2\n        });\n        kakao.maps.event.addListener(marker, \"click\", function() {\n            if (activeInfoWindowRef.current) {\n                activeInfoWindowRef.current.close();\n            }\n            react_dom__WEBPACK_IMPORTED_MODULE_3___default().render(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Popup, {\n                name: name,\n                lat: lat,\n                lng: lng,\n                onSetDestination: setDestination,\n                storeData: null\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 581,\n                columnNumber: 9\n            }, this), content);\n            infowindow.open(map, marker);\n            activeInfoWindowRef.current = infowindow;\n            // 마커 클릭 후 짧은 시간 동안 지도 클릭 이벤트를 무시\n            const clickTimeout = setTimeout(()=>{\n                kakao.maps.event.addListener(map, \"click\", closeInfoWindow);\n            }, 100);\n            // 데이터를 가져와서 Popup 컴포넌트를 업데이트합니다.\n            fetch(\"/api/map/get/products/map/\".concat(encodeURIComponent(name))).then((response)=>{\n                if (!response.ok) {\n                    throw new Error(\"Network response was not ok\");\n                }\n                return response.json();\n            }).then((data)=>{\n                react_dom__WEBPACK_IMPORTED_MODULE_3___default().render(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Popup, {\n                    name: name,\n                    lat: lat,\n                    lng: lng,\n                    onSetDestination: setDestination,\n                    storeData: data\n                }, void 0, false, {\n                    fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                    lineNumber: 609,\n                    columnNumber: 13\n                }, this), content);\n            }).catch((error)=>{\n                console.error(\"Error fetching store data:\", error);\n                react_dom__WEBPACK_IMPORTED_MODULE_3___default().render(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Popup, {\n                    name: name,\n                    lat: lat,\n                    lng: lng,\n                    onSetDestination: setDestination,\n                    storeData: null,\n                    error: \"데이터를 불러오는 데 실패했습니다.\"\n                }, void 0, false, {\n                    fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                    lineNumber: 622,\n                    columnNumber: 13\n                }, this), content);\n            });\n            function closeInfoWindow() {\n                infowindow.close();\n                activeInfoWindowRef.current = null;\n                kakao.maps.event.removeListener(map, \"click\", closeInfoWindow);\n                clearTimeout(clickTimeout);\n            }\n        });\n        return {\n            marker,\n            infowindow\n        };\n    }, [\n        map,\n        kakao,\n        setDestination\n    ]);\n    const initializeMap = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        if (window.kakao && window.kakao.maps) {\n            const mapContainer = document.getElementById(\"map\");\n            const mapOptions = {\n                center: new window.kakao.maps.LatLng(36.9692, 127.8717),\n                level: 3\n            };\n            const kakaoMap = new window.kakao.maps.Map(mapContainer, mapOptions);\n            setMap(kakaoMap);\n            setKakao(window.kakao);\n            // 유저 원\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition((position)=>{\n                    const userLat = position.coords.latitude;\n                    const userLng = position.coords.longitude;\n                    const userPosition = new window.kakao.maps.LatLng(userLat, userLng);\n                    kakaoMap.setCenter(userPosition);\n                    const marker = new window.kakao.maps.Marker({\n                        position: userPosition,\n                        map: kakaoMap\n                    });\n                    setUserMarker(marker);\n                    const initialRadius = r; // 초기 반경\n                    const maxRadius = r + 2; // 최대 반경\n                    const minRadius = r; // 최소 반경\n                    let radius = initialRadius;\n                    let expanding = true;\n                    const circle = new window.kakao.maps.Circle({\n                        center: userPosition,\n                        radius: initialRadius,\n                        strokeWeight: 2,\n                        strokeColor: \"#304FFE\",\n                        strokeOpacity: 0.8,\n                        strokeStyle: \"solid\",\n                        fillColor: \"#304FFE\",\n                        fillOpacity: 0.3,\n                        map: kakaoMap\n                    });\n                    setUserCircle(circle);\n                    const updateInterval = 16; // 약 60 FPS (1000ms / 60 ≈ 16ms)\n                    function animateCircle(timestamp) {\n                        // 애니메이션 속도 조절 (0.5은 속도 조절 계수, 필요에 따라 조정 가능)\n                        const speed = 0.055;\n                        if (expanding) {\n                            radius += speed;\n                            if (radius >= maxRadius) {\n                                expanding = false;\n                            }\n                        } else {\n                            radius -= speed;\n                            if (radius <= minRadius) {\n                                expanding = true;\n                            }\n                        }\n                        circle.setRadius(radius);\n                        // 다음 애니메이션 프레임 요청\n                        setTimeout(()=>requestAnimationFrame(animateCircle), updateInterval);\n                    }\n                    // 애니메이션 시작\n                    requestAnimationFrame(animateCircle);\n                }, (error)=>{\n                    console.error(\"Error getting user location:\", error);\n                });\n            } else {\n                console.error(\"Geolocation is not supported by this browser.\");\n            }\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const script = document.createElement(\"script\");\n        script.src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey=50912e872dcc098ce3db6b205dd83c96&libraries=services&autoload=false\";\n        script.async = true;\n        script.onload = ()=>{\n            window.kakao.maps.load(initializeMap);\n        };\n        document.head.appendChild(script);\n        return ()=>{\n            document.head.removeChild(script);\n        };\n    }, [\n        initializeMap\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        if (map && kakao) {\n            Object.values(markersRef.current).forEach((param)=>{\n                let { marker, infowindow } = param;\n                if (marker) marker.setMap(null);\n                if (infowindow) infowindow.close();\n            });\n            markersRef.current = {};\n            stores.forEach((store)=>{\n                const markerInfo = addStoreMarker(store.lat, store.lng, store.name, store.id);\n                if (markerInfo) {\n                    markersRef.current[store.id] = markerInfo;\n                }\n            });\n            if (activeInfoWindowRef.current) {\n                activeInfoWindowRef.current.close();\n                activeInfoWindowRef.current = null;\n            }\n        }\n    }, [\n        map,\n        kakao,\n        stores,\n        addStoreMarker\n    ]);\n    // 사용자 위치 이동\n    const moveUserLocation = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async (lat, lng)=>{\n        if (map && kakao && userMarker && userCircle) {\n            const newPosition = new kakao.maps.LatLng(lat, lng);\n            // 사용자 마커와 원 이동\n            userMarker.setPosition(newPosition);\n            userCircle.setPosition(newPosition); // setCenter 대신 setPosition 사용\n            // 지도 중심 이동\n            map.setCenter(newPosition);\n            if (destinationCircle && destinationMarker) {\n                const destPosition = destinationCircle.getPosition();\n                // 원 색상 업데이트\n                await updateCircleColors(newPosition, destPosition);\n                // 폴리라인 업데이트\n                if (polyline) {\n                    polyline.setPath([\n                        newPosition,\n                        destPosition\n                    ]);\n                }\n                // 거리 오버레이 업데이트\n                const distance = await calculateDistanceAsync(lat, lng, destPosition.getLat(), destPosition.getLng());\n                if (distanceOverlay) {\n                    distanceOverlay.setPosition(new kakao.maps.LatLng((lat + destPosition.getLat()) / 2, (lng + destPosition.getLng()) / 2));\n                    distanceOverlay.setContent('<div style=\"padding:5px;background:transparent;border-radius:5px;color:black;\">'.concat((distance * 1000).toFixed(0), \"m</div>\"));\n                }\n                // 지도 범위 재설정\n                const bounds = new kakao.maps.LatLngBounds();\n                bounds.extend(newPosition);\n                bounds.extend(destPosition);\n                map.setBounds(bounds);\n            }\n        }\n    }, [\n        map,\n        kakao,\n        userMarker,\n        userCircle,\n        destinationCircle,\n        destinationMarker,\n        polyline,\n        distanceOverlay,\n        updateCircleColors,\n        calculateDistanceAsync\n    ]);\n    const handleSearch = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((query)=>{\n        if (map && kakao && kakao.maps.services) {\n            const ps = new kakao.maps.services.Places();\n            ps.keywordSearch(query, (data, status, _pagination)=>{\n                if (status === kakao.maps.services.Status.OK) {\n                    const bounds = new kakao.maps.LatLngBounds();\n                    let newStores = [];\n                    Object.values(markersRef.current).forEach((param)=>{\n                        let { marker, infowindow } = param;\n                        marker.setMap(null);\n                        infowindow.close();\n                    });\n                    markersRef.current = {};\n                    for(let i = 0; i < data.length; i++){\n                        const markerPosition = new kakao.maps.LatLng(data[i].y, data[i].x);\n                        const newStore = {\n                            id: data[i].id,\n                            name: data[i].place_name,\n                            lat: data[i].y,\n                            lng: data[i].x,\n                            address: data[i].address_name,\n                            phone: data[i].phone\n                        };\n                        newStores.push(newStore);\n                        bounds.extend(markerPosition);\n                        const markerInfo = addStoreMarker(newStore.lat, newStore.lng, newStore.name, newStore.id);\n                        markersRef.current[newStore.id] = markerInfo;\n                    }\n                    map.setBounds(bounds);\n                    setStores(newStores);\n                }\n            });\n        }\n    }, [\n        map,\n        kakao,\n        setStores,\n        addStoreMarker\n    ]);\n    const addMarkersByStoreNameList = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(async ()=>{\n        if (map && kakao && kakao.maps.services) {\n            try {\n                const mallStreetData = await fetchMallStreetData();\n                Object.values(markersRef.current).forEach((param)=>{\n                    let { marker, infowindow } = param;\n                    marker.setMap(null);\n                    infowindow.close();\n                });\n                markersRef.current = {};\n                const bounds = new kakao.maps.LatLngBounds();\n                const ps = new kakao.maps.services.Places();\n                const searchAndAddMarker = async (storeName, index)=>{\n                    return new Promise((resolve)=>{\n                        ps.keywordSearch(storeName, (data, status)=>{\n                            if (status === kakao.maps.services.Status.OK) {\n                                const place = data[0];\n                                const lat = place.y;\n                                const lng = place.x;\n                                const position = new kakao.maps.LatLng(lat, lng);\n                                const markerInfo = addStoreMarker(lat, lng, storeName, index.toString());\n                                markersRef.current[index.toString()] = markerInfo;\n                                bounds.extend(position);\n                            } else {\n                                console.log(\"No results found for \".concat(storeName));\n                            }\n                            resolve();\n                        }, {\n                            location: new kakao.maps.LatLng(mallStreetData.data.standard_position.Latitude, mallStreetData.data.standard_position.longitude),\n                            radius: 5000\n                        });\n                    });\n                };\n                const chunks = chunkArray(mallStreetData.data.mall_name_list, 5);\n                for (const chunk of chunks){\n                    await Promise.all(chunk.map((storeName, index)=>searchAndAddMarker(storeName, index)));\n                }\n                map.setBounds(bounds);\n            } catch (error) {\n                console.error(\"Error in addMarkersByStoreNameList:\", error);\n            }\n        }\n    }, [\n        map,\n        kakao,\n        addStoreMarker,\n        fetchMallStreetData\n    ]);\n    const chunkArray = (array, size)=>{\n        const chunked = [];\n        for(let i = 0; i < array.length; i += size){\n            chunked.push(array.slice(i, i + size));\n        }\n        return chunked;\n    };\n    const updateUI = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        requestAnimationFrame(updateUI);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        requestAnimationFrame(updateUI);\n    }, [\n        updateUI\n    ]);\n    const handleMallStreetButtonClick = ()=>{\n        addMarkersByStoreNameList();\n    };\n    const fetchUserLocation = ()=>{\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position)=>{\n                const { latitude, longitude } = position.coords;\n                moveUserLocation(latitude, longitude);\n            }, (error)=>{\n                console.error(\"Error fetching user location:\", error);\n            }, {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            });\n            map.setLevel(1);\n        } else {\n            console.error(\"Geolocation is not supported by this browser.\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: \"relative\",\n            width: \"100vw\",\n            height: \"100vh\",\n            overflow: \"auto\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"map\",\n                style: {\n                    width: \"100vw\",\n                    height: \"100vh\",\n                    overflow: \"auto\"\n                }\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 932,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SearchBar, {\n                onSearch: handleSearch\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 936,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: handleMallStreetButtonClick,\n                style: {\n                    width: \"6rem\",\n                    height: \"1.5rem\",\n                    position: \"absolute\",\n                    top: \"6.5rem\",\n                    padding: \"0.38rem, 0.44rem\",\n                    left: \"12px\",\n                    backgroundColor: \"#304FFE\",\n                    color: \"white\",\n                    border: \"1px solid rgba(0, 0, 0, 0.25)\",\n                    borderRadius: \"0.5rem\",\n                    cursor: \"pointer\",\n                    zIndex: 10\n                },\n                children: \"상가거리이동\"\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 937,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Navbar__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 957,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>fetchUserLocation(),\n                style: {\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    left: \"20px\",\n                    padding: \"10px\",\n                    backgroundColor: \"#304FFE\",\n                    color: \"white\",\n                    border: \"none\",\n                    borderRadius: \"5px\",\n                    cursor: \"pointer\",\n                    zIndex: 10\n                },\n                children: \"사용자 위치 이동\"\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 959,\n                columnNumber: 7\n            }, undefined),\n            showIcon && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    position: \"absolute\",\n                    bottom: \"20px\",\n                    right: \"20px\",\n                    cursor: \"pointer\",\n                    zIndex: 10\n                },\n                onClick: ()=>{\n                    setShowIcon(false);\n                    if (overlapOverlay) {\n                        overlapOverlay.setMap(map);\n                    }\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    width: \"40\",\n                    height: \"40\",\n                    viewBox: \"0 0 40 40\",\n                    fill: \"none\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                        id: \"Group 232\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                id: \"Vector\",\n                                d: \"M19 27H21.6667V19H19V27ZM20.3333 16.3333C20.7111 16.3333 21.028 16.2053 21.284 15.9493C21.54 15.6933 21.6676 15.3769 21.6667 15C21.6658 14.6231 21.5378 14.3067 21.2827 14.0507C21.0276 13.7947 20.7111 13.6667 20.3333 13.6667C19.9556 13.6667 19.6391 13.7947 19.384 14.0507C19.1289 14.3067 19.0009 14.6231 19 15C18.9991 15.3769 19.1271 15.6938 19.384 15.9507C19.6409 16.2076 19.9573 16.3351 20.3333 16.3333ZM20.3333 33.6667C18.4889 33.6667 16.7556 33.3164 15.1333 32.616C13.5111 31.9156 12.1 30.9658 10.9 29.7667C9.7 28.5676 8.75022 27.1564 8.05067 25.5333C7.35111 23.9102 7.00089 22.1769 7 20.3333C6.99911 18.4898 7.34934 16.7564 8.05067 15.1333C8.752 13.5102 9.70178 12.0991 10.9 10.9C12.0982 9.70089 13.5093 8.75111 15.1333 8.05067C16.7573 7.35022 18.4907 7 20.3333 7C22.176 7 23.9093 7.35022 25.5333 8.05067C27.1573 8.75111 28.5684 9.70089 29.7667 10.9C30.9649 12.0991 31.9151 13.5102 32.6173 15.1333C33.3196 16.7564 33.6693 18.4898 33.6667 20.3333C33.664 22.1769 33.3138 23.9102 32.616 25.5333C31.9182 27.1564 30.9684 28.5676 29.7667 29.7667C28.5649 30.9658 27.1538 31.916 25.5333 32.6173C23.9129 33.3187 22.1796 33.6684 20.3333 33.6667Z\",\n                                fill: \"#3554FE\"\n                            }, void 0, false, {\n                                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                                lineNumber: 988,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                id: \"Ellipse 14\",\n                                cx: \"20\",\n                                cy: \"20\",\n                                r: \"20\",\n                                fill: \"#3554FE\",\n                                fillOpacity: \"0.25\"\n                            }, void 0, false, {\n                                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                                lineNumber: 989,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                id: \"Ellipse 15\",\n                                cx: \"20\",\n                                cy: \"20\",\n                                r: \"16\",\n                                fill: \"#3554FE\",\n                                fillOpacity: \"0.25\"\n                            }, void 0, false, {\n                                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                                lineNumber: 990,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                        lineNumber: 987,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                    lineNumber: 986,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n                lineNumber: 974,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/itstime/SPRING_GREENS_PROJECT/SpringGreens-Client/test/pages/components/map.js\",\n        lineNumber: 931,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(Map, \"I+555G6089jXpSJTqTyITPHt3Vw=\");\n_c2 = Map;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Map);\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"Popup\");\n$RefreshReg$(_c1, \"SearchBar\");\n$RefreshReg$(_c2, \"Map\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/components/map.js\n"));

/***/ })

});